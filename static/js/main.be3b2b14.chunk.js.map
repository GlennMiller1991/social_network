{"version":3,"sources":["components/Content/Nava/Nava.module.css","components/Content/Dialogs/Dialogs.module.css","components/Content/Content.module.css","components/Content/Posts/Post/Post.module.css","components/Content/Sidebar/Sidebar.module.css","components/Header/Header.module.css","components/Content/Dialogs/Chat/Chat.module.css","components/Content/Posts/Post/LikesCount/LikesCount.module.css","components/Content/ShareStory/ShareStory.module.css","components/Footer/Footer.module.css","reportWebVitals.ts","redux/state.ts","components/Header/Header.tsx","components/Content/Nava/Nava.tsx","components/Content/Posts/Post/LikesCount/LikesCount.tsx","components/Content/Posts/Post/Post.tsx","components/Content/Posts/Posts.tsx","components/Content/Sidebar/BestPosts/BestPosts.tsx","components/Content/Sidebar/Tags/Tag/Tag.tsx","components/Content/Sidebar/Tags/Tags.tsx","components/Content/Sidebar/Sidebar.tsx","components/Content/Dialogs/Chat/Chat.tsx","components/Content/Dialogs/OpenDialog/OpenDialog.tsx","components/Content/Dialogs/Dialogs.tsx","components/Content/Best/Best.tsx","components/Content/ShareStory/ShareStory.tsx","components/Content/Profile/Profile.tsx","components/Content/Content.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","_state","postsPage","posts","postText","postPhoto","postDate","postLikes","postId","v1","shareStoryPage","storyText","dialogsPage","chat","id","author","message","dialogs","name","sideBar","tags","priority","bestPosts","text","_renderEntireTree","console","log","changeShareStoryText","shareStoryText","this","subscribe","observer","getState","dispatch","action","type","newPost","postMessage","Date","getDate","getMonth","getFullYear","push","obj","find","post","value","Header","props","styles","header","textContainer","enterBtn","onClick","setWay","imgBtn","src","alt","Nava","nava","className","button","activeClassName","active","to","search","searchBar","LikesCount","changeLikesCountHandler","change","like","btn","likesCount","Post","image","Posts","useState","sort","setSort","postsForRender","state","postA","postB","onChange","event","currentTarget","classes","map","BestPosts","bestPost","Tag","tagStyle","fontSize","style","Tags","tag","Sidebar","sidebar","Chat","mappedMessages","messages","m","you","notYou","OpenDialog","openDialog","Dialogs","filter","setFilter","filteredMessages","filterMessages","container","openDialogs","dialog","Best","ShareStory","error","ref","React","createRef","placeholder","maxLength","txt","current","Profile","Content","content","contentContent","general","path","exact","render","component","Footer","footer","href","App","way","renderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.be3b2b14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nava\":\"Nava_nava__1Txrr\",\"button\":\"Nava_button__3UGRg\",\"active\":\"Nava_active__1OPDb\",\"searchBar\":\"Nava_searchBar__2s9wB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__2sluC\",\"filter\":\"Dialogs_filter__3BzKz\",\"openDialogs\":\"Dialogs_openDialogs__1BPAE\",\"dialogs\":\"Dialogs_dialogs__15U5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__EVS44\",\"nava\":\"Content_nava__3MGrF\",\"contentContent\":\"Content_contentContent__3uM9c\",\"sidebar\":\"Content_sidebar__1Gjnn\",\"general\":\"Content_general__3V4UQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__22c__\",\"text\":\"Post_text__1H0C7\",\"image\":\"Post_image__7k2jT\",\"postText\":\"Post_postText__2SCZt\",\"postAuthor\":\"Post_postAuthor__1XwFO\",\"postDate\":\"Post_postDate__3-iXS\",\"postLikes\":\"Post_postLikes__3I43s\",\"postRate\":\"Post_postRate__3OpKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__1zX0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2fUTx\",\"textContainer\":\"Header_textContainer__1X9wE\",\"enterBtn\":\"Header_enterBtn__3RCTD\",\"imgBtn\":\"Header_imgBtn__kMlQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"you\":\"Chat_you__Q3Ix2\",\"notYou\":\"Chat_notYou__3d_-V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"like\":\"LikesCount_like__suXhL\",\"btn\":\"LikesCount_btn__2n-I1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"txt\":\"ShareStory_txt__1JeGs\",\"btn\":\"ShareStory_btn__6N4t5\",\"error\":\"ShareStory_error__1FXdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2HV5Q\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {PostType} from \"../components/Content/Posts/Post/Post\";\r\nimport {ChatType} from \"../components/Content/Dialogs/Chat/Chat\";\r\nimport {v1} from \"uuid\";\r\nimport {OpenDialogPropsType} from \"../components/Content/Dialogs/OpenDialog/OpenDialog\";\r\n\r\n//types\r\nexport type bestPostType = {\r\n    text: string\r\n    id: string\r\n}\r\nexport type tagType = {\r\n    name: string\r\n    priority: number\r\n}\r\nexport type sideBarType = {\r\n    tags: Array<tagType>\r\n    bestPosts: Array<bestPostType>\r\n}\r\nexport type postsPageType = {\r\n    posts: Array<PostType>\r\n}\r\nexport type shareStoryPageType = {\r\n    storyText: string\r\n}\r\nexport type dialogsPageType = {\r\n    chat: Array<ChatType>\r\n    dialogs: Array<OpenDialogPropsType>\r\n}\r\nexport type stateType = {\r\n    postsPage: postsPageType\r\n    dialogsPage: dialogsPageType\r\n    shareStoryPage: shareStoryPageType\r\n    sideBar: sideBarType\r\n}\r\n//action types\r\ntype changeLikesCoundActionType = {\r\n    type: 'CHANGE-LIKES-COUNT'\r\n    value: boolean\r\n    postId: string\r\n}\r\ntype addPostActionType = {\r\n    type: 'ADD-POST'\r\n    postMessage: string\r\n}\r\nexport type actionsType = addPostActionType | changeLikesCoundActionType\r\n\r\nexport type storeType = {\r\n    _state: stateType\r\n    _renderEntireTree: (store: storeType) => void\r\n    changeShareStoryText: (shareStoreText: string) => void\r\n    subscribe: (observer: (store: storeType) => void) => void\r\n    getState: () => stateType\r\n    dispatch: (action: actionsType) => void\r\n}\r\n\r\nexport const store: storeType = {\r\n    _state: {\r\n        postsPage: {\r\n            posts: [\r\n                {\r\n                    postText: 'Is there anybody going to listen to my story' +\r\n                        '? All about girl who came to stay. She is a kind of girl you' +\r\n                        'want so much, it makes you sorry, still you don\\'t regret a single day',\r\n                    postPhoto: 'https://www.culturesonar.com/wp-content/uploads/2017/08/beatles-with-a-girl-getty-600x400.jpg',\r\n                    postDate: '07.23.2021',\r\n                    postLikes: -1,\r\n                    postId: v1(),\r\n                },\r\n                {\r\n                    postText: 'Когда в нашем городе только зарождался первый частный' +\r\n                        ' приют для животных, я пошла туда волонтёром. Была хорошо знакома' +\r\n                        ' с организаторами этого дела, видела, как они стараются ради' +\r\n                        ' хвостатых. Тогда они ещё ездили на скромных машинах и работали' +\r\n                        ' на основной работе.\\n' +\r\n                        'Прошло уже почти десять лет. У тех барышень свои частные коттеджи' +\r\n                        ' в элитном районе города, дорогие машины и прочие блага. ' +\r\n                        'И всё это притом, что они уже лет пять не работают нигде, кроме' +\r\n                        ' как безвозмездно руководят приютом. Хм.',\r\n                    postPhoto: 'https://www.culturesonar.com/wp-content/uploads/2017/08/beatles-with-a-girl-getty-600x400.jpg',\r\n                    postDate: '06.23.2021',\r\n                    postLikes: 2,\r\n                    postId: v1()\r\n                },\r\n                {\r\n                    postText: 'Хм.',\r\n                    postPhoto: 'https://www.culturesonar.com/wp-content/uploads/2017/08/beatles-with-a-girl-getty-600x400.jpg',\r\n                    postDate: '08.23.2021',\r\n                    postLikes: 1,\r\n                    postId: v1()\r\n                }]\r\n        },\r\n        shareStoryPage: {\r\n            storyText: ''\r\n        },\r\n        dialogsPage: {\r\n            chat: [\r\n                {\r\n                    id: v1(),\r\n                    author: 'notYou',\r\n                    message: 'How are you'\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    author: 'you',\r\n                    message: 'How are you'\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    author: 'notYou',\r\n                    message: 'How are you'\r\n                },\r\n\r\n            ],\r\n            dialogs: [\r\n                {name: 'Katya', id: v1()},\r\n                {name: 'Dasha', id: v1()},\r\n                {name: 'Anna', id: v1()},\r\n                {name: 'Viktor', id: v1()},\r\n                {name: 'Andrey', id: v1()},\r\n            ],\r\n        },\r\n        sideBar: {\r\n            tags: [\r\n                {\r\n                    name: 'Family',\r\n                    priority: 9,\r\n                },\r\n                {\r\n                    name: 'Strange',\r\n                    priority: 16,\r\n                },\r\n                {\r\n                    name: 'Love',\r\n                    priority: 14,\r\n                },\r\n                {\r\n                    name: 'Pizdec',\r\n                    priority: 20,\r\n                },\r\n                {\r\n                    name: 'Scary',\r\n                    priority: 13,\r\n                },\r\n                {\r\n                    name: 'Childhood',\r\n                    priority: 12,\r\n                },\r\n                {\r\n                    name: 'Work',\r\n                    priority: 22,\r\n                },\r\n            ],\r\n            bestPosts: [\r\n                {text: 'Best post', id: v1()},\r\n                {text: 'Best post', id: v1()},\r\n                {text: 'Best post', id: v1()},\r\n                {text: 'Best post', id: v1()},\r\n                {text: 'Best post', id: v1()},\r\n                {text: 'Best post', id: v1()},\r\n            ],\r\n        },\r\n    },\r\n    _renderEntireTree(store) {\r\n        console.log('state was changed')\r\n    },\r\n    changeShareStoryText(shareStoryText) {\r\n        this._state.shareStoryPage.storyText = shareStoryText\r\n        this._renderEntireTree(this)\r\n    },\r\n    subscribe(observer) {\r\n        this._renderEntireTree = observer\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    dispatch(action: actionsType) {\r\n        switch (action.type) {\r\n            case \"ADD-POST\":\r\n                const newPost: PostType = {\r\n                    postText: action.postMessage,\r\n                    postPhoto: 'https://helo',\r\n                    postDate: `${new Date().getDate()}.${new Date().getMonth()}.${new Date().getFullYear()}}`,\r\n                    postLikes: 0,\r\n                    postId: v1()\r\n                }\r\n                this._state.postsPage.posts.push(newPost)\r\n                this._renderEntireTree(this)\r\n                break;\r\n            case \"CHANGE-LIKES-COUNT\":\r\n                const obj = this._state.postsPage.posts.find((post) => post.postId === action.postId)\r\n                if (obj) {\r\n                    action.value ? obj.postLikes++ : obj.postLikes--\r\n                    this._renderEntireTree(this);\r\n                }\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {wayType} from \"../../App\";\r\n\r\ntype HeaderPropsType = {\r\n    setWay: (value: wayType) => void\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = (props) => {\r\n    return (\r\n        <div id={styles.header}>\r\n            <div id={styles.textContainer}>\r\n                <h4>Внимание!</h4>\r\n                <p>\r\n                    На данном сайте присутствует ненормативная\r\n                    лексика, которая может оскорбить ваши чувства. Здесь\r\n                    анонимы делятся исключительно своим мнением, совпадения\r\n                    с реальными людьми/компаниями случайны (иногда).\r\n                </p>\r\n                <p>\r\n                    Нажимая на изображение, вы подтверждаете, что вам есть 18\r\n                    лет, и вы принимаете всю ответственность за\r\n                    прочитанное на себя.\r\n                </p>\r\n                <button id={styles.enterBtn}\r\n                        onClick={() => props.setWay(1)}>\r\n                    <img id={styles.imgBtn}\r\n                         src='https://share.cdn.viber.com/pg_download?id=0-04-05-a50d6229fb2be5d62ec2f08878bf7ee2e7ca1cbb7bdf45439bc1499398711fee&filetype=jpg&type=icon'\r\n                         alt='No image'/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n        ;\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Nava.module.css\";\r\n\r\nexport const Nava = () => {\r\n    return (\r\n        <div id={styles.nava}>\r\n            <div className={styles.button}>\r\n                <NavLink activeClassName={styles.active} to='/'>\r\n                    <img src='https://otvet.imgsmail.ru/download/82092830_8fae13c057d409cc317bcda273f470e5_800.jpg'\r\n                         alt='No image'/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.button}>\r\n                <NavLink activeClassName={styles.active} to='/share'>\r\n                    SHARE\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.button}>\r\n                <NavLink activeClassName={styles.active} to='/best'>\r\n                    BEST\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.button}>\r\n                <NavLink activeClassName={styles.active}  to='/profile'>\r\n                    PROFILE\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.button}>\r\n                <NavLink activeClassName={styles.active}  to='/dialogs'>\r\n                    DIALOGS\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.button}></div>\r\n            <div className={styles.button}></div>\r\n            <div className={styles.button}>\r\n                <NavLink className={styles.search}\r\n                        activeClassName={styles.active}\r\n                         to=''>\r\n                    SEARCH\r\n                </NavLink>\r\n                <div className={styles.searchBar}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport styles from './LikesCount.module.css'\r\nimport {actionsType} from \"../../../../../redux/state\";\r\n\r\n//types\r\ntype LikesCountPropsType = {\r\n    likesCount: number\r\n    dispatch: (action: actionsType) => void\r\n    postId: string\r\n}\r\n\r\nexport const LikesCount: React.FC<LikesCountPropsType> = (props) => {\r\n\r\n    //callbacks\r\n    const changeLikesCountHandler = (change: boolean, postId: string) => {\r\n        props.dispatch({type: \"CHANGE-LIKES-COUNT\", postId: postId, value: change})\r\n    }\r\n\r\n    //return\r\n    return (\r\n        <div className={styles.like}>\r\n            <button className={styles.btn} onClick={() => changeLikesCountHandler(false, props.postId)}>-</button>\r\n            <button>{props.likesCount}</button>\r\n            <button className={styles.btn} onClick={() => changeLikesCountHandler(true, props.postId)}>+</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Post.module.css';\r\nimport {LikesCount} from \"./LikesCount/LikesCount\";\r\nimport {actionsType} from \"../../../../redux/state\";\r\n\r\n//types\r\nexport type PostType = {\r\n    postText: string\r\n    postPhoto: string\r\n    postDate: string\r\n    postLikes: number\r\n    postId: string\r\n}\r\nexport type PostPropsType = {\r\n    postText: string\r\n    postPhoto: string\r\n    postDate: string\r\n    postLikes: number\r\n    postId: string\r\n    dispatch: (action: actionsType) => void\r\n}\r\n\r\n//components\r\nexport const Post: React.FC<PostPropsType> = (props) => {\r\n\r\n    //return\r\n    return (\r\n        <div className={styles.post}>\r\n            <div className={styles.text}>\r\n                <div className={styles.postText}>{props.postText}</div>\r\n                <div className={styles.postDate}>{props.postDate}</div>\r\n                <LikesCount likesCount={props.postLikes}\r\n                            dispatch={props.dispatch}\r\n                            postId={props.postId}/>\r\n            </div>\r\n            <div className={styles.image}>\r\n                <img src={props.postPhoto} alt='not available'/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport classes from './Posts.module.css';\r\nimport {Post} from \"./Post/Post\";\r\nimport {actionsType, postsPageType} from \"../../../redux/state\";\r\n\r\n//types\r\ntype PostsPropsType = {\r\n    state: postsPageType\r\n    dispatch: (action: actionsType) => void\r\n}\r\n\r\n\r\n//components\r\nexport const Posts: React.FC<PostsPropsType> = (props) => {\r\n    //initial data\r\n    const [sort, setSort] = useState<string>('date')\r\n\r\n    //calbacks\r\n    const onChangeHandler = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        setSort(event.currentTarget.value)\r\n    }\r\n\r\n    //filter\r\n    const postsForRender = props.state.posts\r\n    if (sort === 'rate') {\r\n        postsForRender.sort((postA, postB) => {\r\n            return postA.postLikes > postB.postLikes ? -1 : 1\r\n        })\r\n    } else if (sort === 'reverse rate') {\r\n        postsForRender.sort((postA, postB) => {\r\n            return postA.postLikes > postB.postLikes ? 1 : -1\r\n        })\r\n    } else if (sort === 'rate today') {\r\n    }\r\n\r\n\r\n    //return\r\n    return (\r\n        <div>\r\n            Sorted by\r\n            <select value={sort} onChange={onChangeHandler}>\r\n                <option value={'date'}>date</option>\r\n                <option value={'rate'}>rate</option>\r\n                <option value={'reverse rate'}>reverse rate</option>\r\n                <option value={'rate today'}>rate today</option>\r\n            </select>\r\n            <div id={classes.posts}>\r\n                {postsForRender.map((post) => {\r\n                    return (\r\n                        <div key={post.postId}>\r\n                            <Post postText={post.postText}\r\n                                  postPhoto={post.postPhoto}\r\n                                  postDate={post.postDate}\r\n                                  postLikes={post.postLikes}\r\n                                  postId={post.postId}\r\n                                  dispatch={props.dispatch}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../Sidebar.module.css\";\r\n\r\nexport type postType = {\r\n    text: string\r\n    id: string\r\n}\r\n\r\ntype BestPostsPropsType = {\r\n    bestPosts: Array<postType>\r\n}\r\n\r\n\r\nexport const BestPosts: React.FC<BestPostsPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.posts}>\r\n            {props.bestPosts.map(bestPost => {\r\n                return <div key={bestPost.id}\r\n                            className={styles.post}>{bestPost.text}</div>\r\n            })}\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport {tagType} from \"../../../../../redux/state\";\r\n\r\ntype TagPropsType = tagType\r\n\r\nexport const Tag: React.FC<TagPropsType> = (props) => {\r\n\r\n    //styles\r\n    const tagStyle = {\r\n        fontSize: props.priority\r\n    }\r\n\r\n    //return\r\n    return (\r\n        <span style={tagStyle}>{props.name} </span>\r\n    );\r\n}","import styles from \"../Sidebar.module.css\";\r\nimport React from \"react\";\r\nimport {tagType} from \"../../../../redux/state\";\r\nimport {Tag} from \"./Tag/Tag\";\r\n\r\ntype TagsPropsType = {\r\n    tags: Array<tagType>\r\n}\r\n\r\nexport const Tags: React.FC<TagsPropsType> = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {props.tags.map((tag) => <Tag name={tag.name} priority={tag.priority}/>)}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport styles from './Sidebar.module.css';\r\nimport {BestPosts} from \"./BestPosts/BestPosts\";\r\nimport {Tags} from \"./Tags/Tags\";\r\nimport {sideBarType} from \"../../../redux/state\";\r\n\r\ntype SidebarPropsType = {\r\n    state: sideBarType\r\n}\r\n\r\nexport const Sidebar: React.FC<SidebarPropsType> = (props) => {\r\n    return (\r\n        <div id={styles.sidebar}>\r\n            <BestPosts bestPosts={props.state.bestPosts}/>\r\n            <Tags tags={props.state.tags}/>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport styles from \"./Chat.module.css\";\r\n\r\n//types\r\nexport type ChatType = {\r\n    id: string\r\n    author: 'you' | 'notYou'\r\n    message: string\r\n}\r\ntype ChatPropsType = {\r\n    messages: Array<ChatType>\r\n}\r\n\r\n//components\r\nexport const Chat: React.FC<ChatPropsType> = (props) => {\r\n\r\n    //callbacks\r\n    const mappedMessages = props.messages.map((m) => {\r\n        return (\r\n            <div className={(m.author === 'you') ? styles.you : styles.notYou}\r\n                 key={m.id}>\r\n                {m.author === 'notYou' ?\r\n                    <img src={'https://glennmiller.pythonanywhere.com/static/admin_ava.jpg'}/> : false}\r\n                <div>\r\n                    <div className={styles.author}>\r\n                        {m.author}\r\n                    </div>\r\n                    <div className={styles.message}>\r\n                        {m.message}\r\n                    </div>\r\n                </div>\r\n                {m.author === 'you' ?\r\n                    <img src={'https://glennmiller.pythonanywhere.com/static/admin_ava.jpg'}/> : false}\r\n\r\n            </div>\r\n        );\r\n    });\r\n\r\n    //return\r\n    return (\r\n        <div>\r\n            {mappedMessages}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n//types\r\nexport type OpenDialogPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\n//components\r\nexport const OpenDialog: React.FC<OpenDialogPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.openDialog}>\r\n        <NavLink to={`/dialogs/${props.id}`}>\r\n    {props.name}\r\n    </NavLink>\r\n    </div>\r\n);\r\n}","import React, {useState} from 'react';\r\nimport styles from './Dialogs.module.css'\r\nimport {Chat, ChatType} from \"./Chat/Chat\";\r\nimport {OpenDialog} from \"./OpenDialog/OpenDialog\";\r\nimport {dialogsPageType} from \"../../../redux/state\";\r\n\r\n//types\r\ntype FilterType = 'you' | 'notYou' | 'all'\r\ntype DialogsPropsType = {\r\n    state: dialogsPageType\r\n}\r\n\r\n//callbacks\r\nconst filterMessages = (messages: Array<ChatType>, filter: FilterType): Array<ChatType> => {\r\n    if (filter === 'all') {\r\n        return messages;\r\n    } else {\r\n        return messages.filter((m) => {\r\n            return m.author === filter;\r\n        });\r\n    }\r\n}\r\n\r\n//components\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    //initial states\r\n    const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n    //callbacks\r\n    const setNotYou = () => {\r\n        setFilter('notYou');\r\n    }\r\n    const setYou = () => {\r\n        setFilter('you');\r\n    }\r\n    const setAll = () => {\r\n        setFilter('all');\r\n    }\r\n\r\n    //filter\r\n    const filteredMessages = filterMessages(props.state.chat, filter);\r\n\r\n    //return\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.filter}>\r\n                <div onClick={setYou}>you</div>\r\n                <div onClick={setNotYou}>notYou</div>\r\n                <div onClick={setAll}>all</div>\r\n            </div>\r\n            <div className={styles.openDialogs}>\r\n                {props.state.dialogs.map((dialog) => {\r\n                    return (\r\n                        <OpenDialog key={dialog.id} id={dialog.id} name={dialog.name}/>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className={styles.dialogs}>\r\n                <Chat messages={filteredMessages}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport styles from './Profile.module.css';\r\n\r\nexport const Best = () => {\r\n    return (\r\n        <div>Best</div>\r\n    )\r\n}","import React, {ChangeEvent, LegacyRef, MouseEventHandler, useState} from 'react';\r\nimport styles from './ShareStory.module.css';\r\nimport {actionsType, shareStoryPageType} from \"../../../redux/state\";\r\n\r\ntype ShareStoryPropsType = {\r\n    dispatch: (action: actionsType) => void\r\n    state: shareStoryPageType\r\n    changeShareStoryText: (text: string) => void\r\n}\r\n\r\n//components\r\nexport const ShareStory: React.FC<ShareStoryPropsType> = (props) => {\r\n\r\n    //initial states\r\n    const [error, setError] = useState<boolean>(false)\r\n\r\n    const ref: LegacyRef<HTMLTextAreaElement> | undefined = React.createRef()\r\n\r\n    //callbacks\r\n    const onClickCallback = () => {\r\n        props.dispatch({type: 'ADD-POST', postMessage: ref.current ? ref.current.value : ''})\r\n        props.changeShareStoryText('')\r\n    }\r\n\r\n    const onChangeHandler = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.changeShareStoryText(event.currentTarget.value)\r\n    }\r\n\r\n    //return\r\n    return (\r\n        <div>\r\n            <textarea placeholder={'Share your story with us'}\r\n                      value={props.state.storyText}\r\n                      onChange={onChangeHandler}\r\n                      maxLength={1000}\r\n                      ref={ref}\r\n                      className={styles.txt}></textarea>\r\n            <button onClick={onClickCallback}\r\n                    className={styles.btn}>Send\r\n            </button>\r\n            {error && <div className={styles.error}>error</div>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './Profile.module.css';\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>Profile</div>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './Content.module.css';\r\nimport {Nava} from \"./Nava/Nava\";\r\nimport {Posts} from \"./Posts/Posts\";\r\nimport {Sidebar} from \"./Sidebar/Sidebar\";\r\nimport {Dialogs} from \"./Dialogs/Dialogs\";\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {Best} from \"./Best/Best\";\r\nimport {ShareStory} from \"./ShareStory/ShareStory\";\r\nimport {Profile} from \"./Profile/Profile\";\r\nimport {actionsType, stateType} from \"../../redux/state\";\r\n\r\n//types\r\ntype ContentPropsType = {\r\n    state: stateType\r\n    dispatch: (action: actionsType) => void\r\n    changeShareStoryText: (text: string) => void\r\n}\r\n\r\n//components\r\nexport const Content: React.FC<ContentPropsType> = (props) => {\r\n    return (\r\n        <div id={styles.content}>\r\n            <div id={styles.nava}><Nava/></div>\r\n            <div id={styles.contentContent}>\r\n                <div id={styles.general}>\r\n                    <Route path={'/'} exact render={() => <Redirect to={'/main'}/>}/>\r\n                    <Route path='/main'\r\n                           render={() => <Posts state={props.state.postsPage}\r\n                                                dispatch={props.dispatch}/>}/>\r\n                    <Route path='/best' component={Best}/>\r\n                    <Route path='/share' render={() => <ShareStory state={props.state.shareStoryPage}\r\n                                                                   changeShareStoryText={props.changeShareStoryText}\r\n                                                                   dispatch={props.dispatch}/>}/>\r\n                    <Route path='/profile' component={Profile}/>\r\n                    <Route path='/dialogs'\r\n                           render={() => <Dialogs state={props.state.dialogsPage}/>}/>\r\n                </div>\r\n            </div>\r\n            <div id={styles.sidebar}>\r\n                <div id={styles.general}>\r\n                    <Sidebar state={props.state.sideBar}/></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Footer.module.css';\r\n\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div id={classes.footer}>\r\n            <ul>\r\n                <li><NavLink to='/'>main</NavLink></li>\r\n                <li><NavLink to='/best'>best</NavLink></li>\r\n                <li><NavLink to='/profile'>profile</NavLink></li>\r\n                <li><NavLink to='/share'>share</NavLink></li>\r\n            </ul>\r\n            <div>\r\n                <img src='https://podslyshano.com/images/logo.svg' alt='not found'/>\r\n            </div>\r\n            <ul>\r\n                <li><a href={'https://vk.com/racoonister'}>facebook</a></li>\r\n                <li><a href={'https://vk.com/racoonister'}>twitter</a></li>\r\n                <li><a href={'https://vk.com/racoonister'}>telegram</a></li>\r\n                <li><a href={'https://vk.com/racoonister'}>vk</a></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Content} from \"./components/Content/Content\";\nimport {Footer} from \"./components/Footer/Footer\";\nimport {HashRouter} from \"react-router-dom\";\nimport {actionsType, stateType} from \"./redux/state\";\n\n//types\nexport type wayType = 0 | 1\ntype AppPropsType = {\n    state: stateType\n    changeShareStoryText: (text: string) => void\n    dispatch: (action: actionsType) => void\n}\n\nfunction App(props: AppPropsType) {\n    const [way, setWay] = useState<wayType>(1)\n\n    return (\n        <HashRouter>\n            <div id='appWrapper'>\n                {way === 0 ? <Header setWay={setWay}/> :\n                    <>\n                        <Content state={props.state}\n                                 dispatch={props.dispatch}\n                                 changeShareStoryText={props.changeShareStoryText}/>\n                        <Footer/>\n                    </>}\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {storeType, store} from './redux/state'\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst renderEntireTree = (store: storeType) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App state={store.getState()}\n                 dispatch={store.dispatch.bind(store)}\n                 changeShareStoryText={store.changeShareStoryText.bind(store)}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrenderEntireTree(store);\nstore.subscribe(renderEntireTree)\n\n// If you want to start measuring performance in your app, pass a function\n// tlog results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}